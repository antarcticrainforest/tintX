[build-system]
requires = ["flit_core >=3.2"]
build-backend = "flit_core.buildapi"

[project]
name="tintx"
description = "Tracking facility to track rainfall and other non-continous data."
authors = [{name = "Martin Bergemann", email = "martin.bergemann@posteo.org"}]
readme = "README.md"
license = {file = "LICENSE"}
dynamic = ["version"]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
dependencies = [
    "cartopy",
    "click",
    "cftime",
    "dask",
    "geopandas",
    "matplotlib",
    "netCDF4",
    "numpy<2.0",
    "pandas",
    "rasterio",
    "scipy",
    "shapely",
    "tables",
    "tqdm",
    "typing_extensions",
    "xarray",
]

[project.optional-dependencies]
dev = ["flit", "tox"]
tests = [
    "bash_kernel",
    "black",
    "flake8",
    'ipython<8.13.0;python_version<="3.8"',  # # https://github.com/ipython/ipython/issues/14053
    'ipython;python_version>"3.8"',
    "isort",
    "mypy",
    "nbval",
    "pytest",
    "pytest-env",
    "pytest-cov",
    "pytest-xdist",
    "testpath",
]
docs = [
    "bash_kernel",
    "black",
    'ipython<8.13.0;python_version<="3.8"',  # # https://github.com/ipython/ipython/issues/14053
    'ipython;python_version>"3.8"',
    "ipywidgets",
    "furo",
    "h5netcdf",
    "mypy",
    "nbsphinx",
    "pytest",
    "pandoc",
    "recommonmark",
    "sphinx",
    "sphinxcontrib_github_alt",
    "sphinx-execute-code-python3",
]

[project.urls]
Source = "https://github.com/antarcticrainforest/tintX"
Issues = "https://github.com/antarcticrainforest/tintX/issues"
Documentation = "https://tintx.readthedocs.io/en/latest"

[profile.scripts]
tintx = "tintx.cli:tintx"

[package-data]
tintx = ["py.typed"]


[tool.isort]
profile = "black"
line_length = 82


[tool.mypy]
python_version = "3.12"
files = "src/tintx"
strict = false
warn_unused_ignores = true
warn_unreachable = true
show_error_codes = true
install_types = true
non_interactive = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
ignore_missing_imports = true

[tool.pytest.ini_options]
env = [
    "EVALUATION_SYSTEM_PLUGINS={PWD}/src/evaluation_system/tests/mocks,dummy",
    "MPLBACKEND=agg",
    "DATA_FILES={PWD}/docs/source/_static/data"
]
filterwarnings = ["ignore::UserWarning"]

[tool.flake8]
max-complexity = 15
max-line-length = 127
show-source = true
statistics = true
ignore = "E203"
select = "E9, F63, F7, F82"

[tool.flake8.per-file-ignores]
"tests/*.py" = "E501, F401"


[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list = docs, lint, tests
[testenv]
passenv = *
parallel_show_output = true
[testenv:tests]
package = editable
description = "Run unit tests."
deps =
    -e .[tests]
commands =
    python3 -m pytest -vv --cov=./src/tintx --cov-report=html:coverage_report --junitxml report.xml --cov-report xml tests
    python3 -m coverage report
[testenv:docs]
description = "Create the documentation."
deps = -e .[docs]
allowlist_externals = make
commands = make -C docs clean
           make -C docs html
[testenv:lint]
description = "Check code quality."
deps = -e .[tests]
commands =
    python -m isort --check --profile black -t py312 -l 79 src/tintx
    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics --ignore E203 --count --exit-zero --max-complexity=15 --max-line-length=127
    mypy
"""
